@model SysPet.Models.UsuariosViewModel

@{
    ViewData["Title"] = "Delete";
}
@try
{
    <div class="modal fade" id="deleteModal-@Model.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">¿Estas seguro de eliminar usuario?</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Nombre)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Nombre)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Email)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Email)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Contrasenia)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Contrasenia)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Rol)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Rol)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Estado)
                        </dt>
                        @if (Model.State.Equals("Activo"))
                        {
                            <dd class="col-sm-8 badge-custom-success">
                                @Html.DisplayFor(model => Model.State)
                            </dd>
                        }
                        @if (Model.State.Equals("Inactivo"))
                        {
                            <dd class="col-sm-8 badge-custom-danger">
                                @Html.DisplayFor(model => Model.State)
                            </dd>
                        }
                    </dl>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button>

                    <a class="btn btn-outline-danger custom-tooltip btn-custom-color-delete" href="@Url.Action("Delete", "User", new { id = Model.Id })">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-square" viewBox="0 0 16 16">
                            <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                        </svg>
                        Eliminar
                    </a>
                </div>
            </div>
        </div>
    </div>
}
catch (Exception ex)
{
    <p>Error: @ex.Message</p>
}



